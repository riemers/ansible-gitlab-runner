---
# for versions >= 10.x
gitlab_runner_package_name: 'gitlab-runner'

gitlab_runner_system_mode: yes

# gitlab_runner_package_version for version pinning on debian/redhat
# The following are for version pinning on MacOSX
gitlab_runner_wanted_version: latest

# This variable should not be modified usually as it depends on the gitlab_runner_wanted_version variable
gitlab_runner_wanted_tag: "{{ 'latest' if gitlab_runner_wanted_version == 'latest' else ('v' + gitlab_runner_wanted_version) }}"

# Overridden based on platform
gitlab_runner_config_file: "{{ __gitlab_runner_config_file_system_mode if gitlab_runner_system_mode else __gitlab_runner_config_file_user_mode }}"
gitlab_runner_config_file_location: "{{ gitlab_runner_config_file | dirname }}"
gitlab_runner_executable: "{{ gitlab_runner_package_name }}"

# Maximum number of global jobs to run concurrently
gitlab_runner_concurrent: '{{ ansible_processor_vcpus }}'

# GitLab coordinator URL
gitlab_runner_coordinator_url: 'https://gitlab.com'
# GitLab registration token
gitlab_runner_registration_token: ''

gitlab_runner_sentry_dsn: ''

# Prometheus Metrics & Monitoring
gitlab_runner_listen_address: ''

# Session server configuration
gitlab_runner_session_server_listen_address: ''
gitlab_runner_session_server_advertise_address: ''
gitlab_runner_session_server_session_timeout: 1800

# Skip the APT or YUM repository installation
# You should provide a repository containing the needed packages before running this role.
# Use this if you use a mirror repository
# gitlab_runner_skip_package_repo_install: true

# The credentials for the Windows user used to run the gitlab-runner service.
# Those credentials will be passed to `gitlab-runner.exe install`.
# https://docs.gitlab.com/runner/install/windows.html 
gitlab_runner_windows_service_user: ''
gitlab_runner_windows_service_password: ''

# default values for gitlab in container
gitlab_runner_container_install: false
gitlab_runner_container_image: gitlab/gitlab-runner
gitlab_runner_container_tag: latest
gitlab_runner_container_name: gitlab-runner
gitlab_runner_container_restart_policy: unless-stopped 
# you can define a network which the container connects to
# this option uses network_mode, thus 'default' will use the first network found in docker network list
gitlab_runner_container_network: default

# default state to restart
gitlab_runner_restart_state: restarted

# default value for log_format
# gitlab_runner_log_format: runner

# A list of runners to register and configure
gitlab_runner_runners:
    # The identifier of the runner.
  - name: '{{ ansible_hostname }}'
    # set to 'absent' if you want to delete the runner. Defaults to 'present'.
    state: present
    # The executor used by the runner.
    executor: 'shell'
    # Set maximum build log size in kilobytes.
    output_limit: 4096
    # Maximum number of jobs to run concurrently on this specific runner.
    # Defaults to 0, simply means don't limit.
    concurrent_specific: '0'
    # The default Docker image to use. Required when executor is `docker`.
    docker_image: ''
    # The tags assigned to the runner.
    tags: []
    # Indicates whether this runner can pick jobs without tags.
    run_untagged: true
    # Docker privileged mode
    docker_privileged: false
    # Runner Locked. When a runner is locked, it cannot be assigned to other projects
    locked: 'false'
    # Add container to a custom network
    docker_network_mode: bridge
    # Custom environment variables injected to build environment
    env_vars: []
    # Sets the clone_url. The default is not set.
    # clone_url:
    #
    # Sets the pre_clone_script. The default is not set.
    # pre_clone_script:
    #
    # Sets the pre_build_script. The default is not set.
    # pre_build_script:
    #
    # Sets the post_build_script. The default is not set.
    # post_build_script:
    #
    # Runner SSH user
    # ssh_user: ''
    #
    # Runner SSH host
    # ssh_host: ''
    #
    # Runner SSH port
    # ssh_port: ''
    #
    # Runner SSH password
    # ssh_password: ''
    #
    # Runner SSH identity file
    # ssh_identity_file: ''
    #
    # Virtualbox executor configuration params
    # Base VM name (Required for runner registration!)
    # virtualbox_base_name: "MyPerfectVMForGitlabVirtualboxExecutor"
    #
    # Base VM snapshot name
    # virtualbox_base_snapshot: ""
    #
    # Base VM base folder
    # virtualbox_base_folder: ""
    #
    # Not use VM snapshots for agent launch(false==Use snapshots, true==Do not use snapshots)
    # virtualbox_disable_snapshots: false
    #
    # Cache type
    # cache_type: 's3|gcs'
    #
    # Cache path
    # cache_path: prefix/key
    #
    # Cache shared
    # cache_shared: false
    #
    # Cache S3 server address
    # cache_s3_server_address: "s3.amazonaws.com"
    #
    # Cache S3 access key
    # cache_s3_access_key: "AMAZON_S3_ACCESS_KEY"
    #
    # Cache S3 secret key
    # cache_s3_secret_key: "AMAZON_S3_SECRET_KEY"
    #
    # Cache S3 bucket name
    # cache_s3_bucket_name: "my-bucket"
    #
    # Cache S3 bucket location
    # cache_s3_bucket_location: "eu-west-1"
    #
    # Cache S3 insecure
    # cache_s3_insecure: false
    #
    # Cache GCS Bucket name
    # cache_gcs_bucket_name: "my-bucket"
    #
    # Cache GCS CredentialsFile
    # cache_gcs_credentials_file: "/path/to/key_file.json"
    #
    # Cache GCS Access ID
    # cache_gcs_access_id: "cache-access-account@project.iam.gserviceaccount.com"
    #
    # Cache GCS Private Key
    # cache_gcs_private_key: "-----BEGIN PRIVATE KEY-----\nXXXXXX\n-----END PRIVATE KEY-----\n"
    #
    # Cache azure account name
    # cache_azure_account_name: "<AZURE STORAGE ACCOUNT NAME>"
    #
    # Cache azure account key
    # cache_azure_account_key: "<AZURE STORAGE ACCOUNT KEY>"
    #
    # Cache azure container name
    # cache_azure_container_name: "runners-cache"
    #
    # Cache azure storage domain
    # cache_azure_storage_domain: "blob.core.windows.net"
    #
    # Builds directory
    # builds_dir: '/builds_dir'
    #
    # Cache directory
    # cache_dir: '/cache'
    #
    # Extra registration option
    # extra_registration_option: '--maximum-timeout=3600'
    #
    # Extra configuration options to change in the config.toml file
    # This parameter is a dictionary where the first level keys are TOML section names
    # Full list of configuration are available on Gitlab Runner documentation:
    # See https://docs.gitlab.com/runner/configuration/advanced-configuration.html
    #
    # extra_configs:
    #   runners.docker:
    #     memory: 512m
    #     allowed_images: ["ruby:*", "python:*", "php:*"]
    #   runners.docker.sysctls:
    #     net.ipv4.ip_forward: "1"
